{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","table","rows","count","direction","text","children","i","cellIndex","sortTable","n","sort","a","b","x","innerHTML","y","split","join","slice","localeCompare","append","addEventListener","ev","target","closest","index","findIndex","el","classList","contains","remove","add","form","createElement","body","insertAdjacentHTML","preventDefault","data","FormData","entries","Object","fromEntries","values","newRow","insertRow","newFormat","Intl","NumberFormat","notification","notificationTitle","notificationText","dataset","qa","name","length","age","setTimeout","insertCell","format","reset","browserEvent","innerText","input","className","type","cell","code","value"],"mappings":"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","file":"main.abcdeea3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst table = document.querySelector('table');\n\nconst rows = [...tbody.rows];\n\nconst count = {};\nlet direction = 'asc';\nlet text = '';\n\nfor (const i of [...thead.children[0].children]) {\n  count[i.cellIndex] = 0;\n}\n\nfunction sortTable(n) {\n  rows.sort((a, b) => {\n    let x = a.children[n].innerHTML;\n    let y = b.children[n].innerHTML;\n\n    if (n === 4) {\n      x = +x.split(',').join('').slice(1);\n      y = +y.split(',').join('').slice(1);\n\n      return direction === 'asc' ? x - y : y - x;\n    }\n\n    return direction === 'asc' ? x.localeCompare(y) : y.localeCompare(x);\n  });\n\n  tbody.append(...rows);\n  count[n]++;\n}\n\nthead.addEventListener('click', (ev) => {\n  const target = ev.target.cellIndex;\n\n  if (count[target] % 2 !== 0) {\n    direction = 'desc';\n  } else {\n    direction = 'asc';\n  }\n\n  sortTable(target);\n});\n\ntable.addEventListener('click', (ev) => {\n  const target = ev.target.closest('tr');\n  const index = [...table.rows].findIndex(el =>\n    el.classList.contains('active'));\n\n  if (index !== -1) {\n    [...table.rows][index].classList.remove('active');\n  }\n\n  target.classList.add('active');\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\ndocument.body.append(form);\n\nform.insertAdjacentHTML('beforeend', `\n  <label>\n    Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n  </label>\n  <label>\n    Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n  </label>\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option value =\"Tokyo\">Tokyo</option>\n      <option value =\"Singapore\">Singapore</option>\n      <option value =\"London\">London</option>\n      <option value =\"New York\">New York</option>\n      <option value =\"Edinburgh\">Edinburgh</option>\n      <option value =\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>\n    Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n  </label>\n  <label>\n    Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n`);\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n\n  const data = new FormData(form);\n  const entries = Object.fromEntries(data.entries());\n  const values = Object.values(entries);\n  const newRow = tbody.insertRow();\n  const newFormat = new Intl.NumberFormat('en-US');\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationText = document.createElement('p');\n\n  notification.classList.add('notification');\n  notification.dataset.qa = 'notification';\n\n  if (entries.name.length < 4 || entries.age < 18 || entries.age > 90) {\n    notification.classList.add('error');\n    notificationTitle.innerHTML = 'Error!';\n    notificationText.innerHTML = 'Please, check your name and age';\n    document.body.append(notification);\n    notification.append(notificationTitle, notificationText);\n    setTimeout(() => notification.remove(), 2000);\n\n    return;\n  }\n\n  for (let i = 0; i < table.rows[0].children.length; i++) {\n    if (i === 4) {\n      newRow.insertCell().innerHTML = `$${newFormat.format(values[i])}`;\n    } else {\n      newRow.insertCell().innerHTML = values[i];\n    }\n  }\n\n  notification.classList.add('success');\n  notificationTitle.innerHTML = 'Success!';\n  notificationText.innerHTML = 'An employee was added.';\n  document.body.append(notification);\n  notification.append(notificationTitle, notificationText);\n  setTimeout(() => notification.remove(), 2000);\n\n  form.reset();\n});\n\ntable.addEventListener('dblclick', (browserEvent) => {\n  browserEvent.preventDefault();\n\n  const target = browserEvent.target.closest('td');\n\n  text = target.innerText;\n\n  target.innerText = '';\n\n  const input = document.createElement('input');\n\n  input.className = 'cell-input';\n  target.append(input);\n\n  if (target.cellIndex === 3 || target.cellIndex === 4) {\n    input.type = 'number';\n  }\n});\n\ntable.addEventListener('keydown', (ev) => {\n  const target = ev.target;\n  const cell = ev.target.closest('td');\n\n  if (ev.code !== 'Enter') {\n    return;\n  }\n\n  if (target.value.length === 0) {\n    cell.innerHTML = text;\n  } else {\n    cell.innerHTML = target.value;\n  }\n\n  cell.innerHTML = target.value;\n});\n\ntable.addEventListener('blur', (browserEvent) => {\n  const target = browserEvent.target;\n  const cell = browserEvent.target.closest('td');\n\n  if (target.value.length === 0) {\n    cell.innerHTML = text;\n  } else {\n    cell.innerHTML = target.value;\n  }\n}, true);\n"]}